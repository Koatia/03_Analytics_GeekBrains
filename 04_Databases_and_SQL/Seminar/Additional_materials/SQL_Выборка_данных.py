DROP TABLE book;  #удаляет таблицу
CREATE TABLE book(                         # добавить таблицу book  со столбцом идентификатором book_id
    book_id INT PRIMARY KEY AUTO_INCREMENT,
    book VARCHAR(30)
);
INSERT INTO book (title, author, price, amount)                 # Добавить новую строку в таблицу
VALUES ('Мастер и Маргарита',   'Булгаков М.А.',    670.99, 3);


SELECT * FROM book; # Выбрать все записи таблицы book.
SELECT title AS Название #title сохранить как "Название"
IF(условие, выражение_1, выражение_2) либо IF1(условие, выражение_1, IF2(условие2, выражение_1, выражение_2)) #если истина то выражения_1, ложь то выражения_2.
WHERE price * amount > 4000; #Выборка данных по условию - отобрать все результаты где price * amount > 4000
WHERE amount BETWEEN 5 AND 14 # диапазон от 5 до 14 включительно
WHERE author IN ('Булгаков М.А.', 'Достоевский Ф.М.'); # есть ли автор в списке
WHERE title LIKE 'Б%' # %-любая строка, _ - одиночный символ
ORDER BY author DESC,title ASC; - сортировка по столбцу в DESC - обратном порядке и title ASC - по порядку

Функция     Описание                                                      Пример
CEILING(x)  возвращает наименьшее целое число, большее или равное x
            (округляет до целого числа в большую сторону)                  CEILING(4.2)=5
                                                                           CEILING(-5.8)=-5
ROUND(x, k) округляет значение x до k знаков после запятой,
            если k не указано – x округляется до целого                    ROUND(4.361)=4
                                                                           ROUND(5.86592,1)=5.9
FLOOR(x)    возвращает наибольшее целое число, меньшее или равное x
            (округляет до  целого числа в меньшую сторону)                  FLOOR(4.2)=4
                                                                            FLOOR(-5.8)=-6
POWER(x, y) возведение x в степень y                                        POWER(3,4)=81.0
SQRT(x)     квадратный корень из x                                          SQRT(4)=2.0
                                                                            SQRT(2)=1.41...
DEGREES(x)  конвертирует значение x из радиан в градусы                     DEGREES(3) = 171.8...
RADIANS(x)  конвертирует значение x из градусов в радианы                   RADIANS(180)=3.14...
ABS(x)      модуль числа x                                                  ABS(-1) = 1
                                                                            ABS(1) = 1
PI()        pi = 3.1415926...

Логическое выражение может включать операторы сравнения:
(равно «=», не равно «<>», больше «>», меньше «<», больше или равно«>=», меньше или равно «<=») и выражения, допустимые в SQL.

Приоритеты операций:

круглые скобки
умножение  (*),  деление (/)
сложение  (+), вычитание (-)
операторы сравнения (=, >, <, >=, <=, <>)
NOT
AND
OR

Логический порядок операций для запроса SQL следующий:

FROM
WHERE
SELECT
ORDER BY

Важно! Если названия столбцов заключены в кавычки, то при использовании их в сортировке, необходимо записывать их БЕЗ КАВЫЧЕК.


